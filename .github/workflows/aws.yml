name: aws_deploy

on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  deploy:
    name: Deploy on AWS
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Create .env file
        uses: SpicyPizza/create-envfile@v2.0
        with:
            envkey_HOST: ${{ secrets.HOST }}
            envkey_PORT: ${{ secrets.PORT }}
            envkey_OAUTH2_SECRET_KEY: ${{ secrets.OAUTH2_SECRET_KEY }}
            envkey_OAUTH2_ALGORITHM: ${{ secrets.OAUTH2_ALGORITHM }}
            envkey_OAUTH2_ACCESS_TOKEN_EXPIRE_DAYS: ${{ secrets.OAUTH2_ACCESS_TOKEN_EXPIRE_DAYS }}
            envkey_AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
            envkey_AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
            envkey_AUTH0_ALGORITHMS: ${{ secrets.AUTH0_ALGORITHMS }}
            envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
            envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
            envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
            envkey_POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
            envkey_POSTGRES_TEST_NAME: ${{ secrets.POSTGRES_TEST_NAME }}
            envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
            envkey_REDIS_PORT: ${{ secrets.REDIS_PORT }}
            envkey_REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
            envkey_LOG_DIR: ${{ secrets.LOG_DIR }}
            envkey_AWS_IP: ${{ secrets.AWS_IP }}
            envkey_AWS_SSH: ${{ secrets.AWS_SSH }}
            envkey_AWS_USER: ${{ secrets.AWS_USER }}
            fail_on_empty: true

      - name: Copy .env file to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH }}
          source: ".env"
          target: "/ubuntu/meduzzen-intership"

      - name: Build Docker image
        run:
          docker build . -t meduzzen_internship-primary
      
      - name: Archive Docker image
        run:
          docker save meduzzen_internship-primary | gzip > meduzzen-intership.tar.gz
      
      - name: Copy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH }}
          source: "meduzzen-intership.tar.gz"
          target: "/ubuntu/meduzzen-intership"
      
      - name: Deploy new Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_IP }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.AWS_SSH }}
          script: |
            sudo docker load < /tmp/meduzzen-intership/meduzzen-intership.tar.gz
            docker stop app || true
            docker rm app || true
            sudo docker run -d \
              --restart unless-stopped \
              --env-file /ubuntu/meduzzen_intership/.env \
              --name app \
              -p 80:80 \
              meduzzen_internship-primary